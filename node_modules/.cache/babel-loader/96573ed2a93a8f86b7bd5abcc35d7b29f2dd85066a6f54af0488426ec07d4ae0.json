{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"../../../src/components/VGrid/VGrid.sass\";\nimport Vue from 'vue';\nimport mergeData from '../../util/mergeData';\nimport { upperFirst } from '../../util/helpers'; // no xs\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl'];\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false\n    };\n    return props;\n  }, {});\n})();\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps)\n};\nfunction breakpointClass(type, prop, val) {\n  let className = type;\n  if (val == null || val === false) {\n    return undefined;\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '');\n    className += `-${breakpoint}`;\n  } // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase();\n  } // .order-md-6\n\n  className += `-${val}`;\n  return className.toLowerCase();\n}\nconst cache = new Map();\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: str => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str)\n    },\n    tag: {\n      type: String,\n      default: 'div'\n    }\n  },\n  render(h, {\n    props,\n    data,\n    children,\n    parent\n  }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = '';\n    for (const prop in props) {\n      cacheKey += String(props[prop]);\n    }\n    let classList = cache.get(cacheKey);\n    if (!classList) {\n      classList = []; // Loop through `col`, `offset`, `order` breakpoint props\n\n      let type;\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value = props[prop];\n          const className = breakpointClass(type, prop, value);\n          if (className) classList.push(className);\n        });\n      }\n      const hasColClasses = classList.some(className => className.startsWith('col-'));\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf\n      });\n      cache.set(cacheKey, classList);\n    }\n    return h(props.tag, mergeData(data, {\n      class: classList\n    }), children);\n  }\n});","map":{"version":3,"names":["Vue","mergeData","upperFirst","breakpoints","breakpointProps","reduce","props","val","type","Boolean","String","Number","default","offsetProps","orderProps","propMap","col","Object","keys","offset","order","breakpointClass","prop","className","undefined","breakpoint","replace","toLowerCase","cache","Map","extend","name","functional","cols","alignSelf","validator","str","includes","tag","render","h","data","children","parent","cacheKey","classList","get","forEach","value","push","hasColClasses","some","startsWith","set","class"],"sources":["C:/Users/emanuel.bessa/Desktop/projeto-portfolio/portfolio/node_modules/vuetify/lib/components/VGrid/VCol.js"],"sourcesContent":["import \"../../../src/components/VGrid/VGrid.sass\";\nimport Vue from 'vue';\nimport mergeData from '../../util/mergeData';\nimport { upperFirst } from '../../util/helpers'; // no xs\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl'];\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false\n    };\n    return props;\n  }, {});\n})();\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps)\n};\n\nfunction breakpointClass(type, prop, val) {\n  let className = type;\n\n  if (val == null || val === false) {\n    return undefined;\n  }\n\n  if (prop) {\n    const breakpoint = prop.replace(type, '');\n    className += `-${breakpoint}`;\n  } // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n\n\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase();\n  } // .order-md-6\n\n\n  className += `-${val}`;\n  return className.toLowerCase();\n}\n\nconst cache = new Map();\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: str => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str)\n    },\n    tag: {\n      type: String,\n      default: 'div'\n    }\n  },\n\n  render(h, {\n    props,\n    data,\n    children,\n    parent\n  }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = '';\n\n    for (const prop in props) {\n      cacheKey += String(props[prop]);\n    }\n\n    let classList = cache.get(cacheKey);\n\n    if (!classList) {\n      classList = []; // Loop through `col`, `offset`, `order` breakpoint props\n\n      let type;\n\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value = props[prop];\n          const className = breakpointClass(type, prop, value);\n          if (className) classList.push(className);\n        });\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('col-'));\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf\n      });\n      cache.set(cacheKey, classList);\n    }\n\n    return h(props.tag, mergeData(data, {\n      class: classList\n    }), children);\n  }\n\n});\n//# sourceMappingURL=VCol.js.map"],"mappings":";AAAA,OAAO,0CAA0C;AACjD,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,SAASC,UAAU,QAAQ,oBAAoB,CAAC,CAAC;;AAEjD,MAAMC,WAAW,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AAE5C,MAAMC,eAAe,GAAG,CAAC,MAAM;EAC7B,OAAOD,WAAW,CAACE,MAAM,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;IACxCD,KAAK,CAACC,GAAG,CAAC,GAAG;MACXC,IAAI,EAAE,CAACC,OAAO,EAAEC,MAAM,EAAEC,MAAM,CAAC;MAC/BC,OAAO,EAAE;IACX,CAAC;IACD,OAAON,KAAK;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;AACR,CAAC,EAAE,CAAC;AAEJ,MAAMO,WAAW,GAAG,CAAC,MAAM;EACzB,OAAOV,WAAW,CAACE,MAAM,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;IACxCD,KAAK,CAAC,QAAQ,GAAGJ,UAAU,CAACK,GAAG,CAAC,CAAC,GAAG;MAClCC,IAAI,EAAE,CAACE,MAAM,EAAEC,MAAM,CAAC;MACtBC,OAAO,EAAE;IACX,CAAC;IACD,OAAON,KAAK;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;AACR,CAAC,EAAE,CAAC;AAEJ,MAAMQ,UAAU,GAAG,CAAC,MAAM;EACxB,OAAOX,WAAW,CAACE,MAAM,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;IACxCD,KAAK,CAAC,OAAO,GAAGJ,UAAU,CAACK,GAAG,CAAC,CAAC,GAAG;MACjCC,IAAI,EAAE,CAACE,MAAM,EAAEC,MAAM,CAAC;MACtBC,OAAO,EAAE;IACX,CAAC;IACD,OAAON,KAAK;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;AACR,CAAC,EAAE,CAAC;AAEJ,MAAMS,OAAO,GAAG;EACdC,GAAG,EAAEC,MAAM,CAACC,IAAI,CAACd,eAAe,CAAC;EACjCe,MAAM,EAAEF,MAAM,CAACC,IAAI,CAACL,WAAW,CAAC;EAChCO,KAAK,EAAEH,MAAM,CAACC,IAAI,CAACJ,UAAU;AAC/B,CAAC;AAED,SAASO,eAAeA,CAACb,IAAI,EAAEc,IAAI,EAAEf,GAAG,EAAE;EACxC,IAAIgB,SAAS,GAAGf,IAAI;EAEpB,IAAID,GAAG,IAAI,IAAI,IAAIA,GAAG,KAAK,KAAK,EAAE;IAChC,OAAOiB,SAAS;EAClB;EAEA,IAAIF,IAAI,EAAE;IACR,MAAMG,UAAU,GAAGH,IAAI,CAACI,OAAO,CAAClB,IAAI,EAAE,EAAE,CAAC;IACzCe,SAAS,IAAK,IAAGE,UAAW,EAAC;EAC/B,CAAC,CAAC;EACF;EACA;;EAGA,IAAIjB,IAAI,KAAK,KAAK,KAAKD,GAAG,KAAK,EAAE,IAAIA,GAAG,KAAK,IAAI,CAAC,EAAE;IAClD;IACA,OAAOgB,SAAS,CAACI,WAAW,CAAC,CAAC;EAChC,CAAC,CAAC;;EAGFJ,SAAS,IAAK,IAAGhB,GAAI,EAAC;EACtB,OAAOgB,SAAS,CAACI,WAAW,CAAC,CAAC;AAChC;AAEA,MAAMC,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC;AACvB,eAAe7B,GAAG,CAAC8B,MAAM,CAAC;EACxBC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE,IAAI;EAChB1B,KAAK,EAAE;IACL2B,IAAI,EAAE;MACJzB,IAAI,EAAE,CAACC,OAAO,EAAEC,MAAM,EAAEC,MAAM,CAAC;MAC/BC,OAAO,EAAE;IACX,CAAC;IACD,GAAGR,eAAe;IAClBe,MAAM,EAAE;MACNX,IAAI,EAAE,CAACE,MAAM,EAAEC,MAAM,CAAC;MACtBC,OAAO,EAAE;IACX,CAAC;IACD,GAAGC,WAAW;IACdO,KAAK,EAAE;MACLZ,IAAI,EAAE,CAACE,MAAM,EAAEC,MAAM,CAAC;MACtBC,OAAO,EAAE;IACX,CAAC;IACD,GAAGE,UAAU;IACboB,SAAS,EAAE;MACT1B,IAAI,EAAEE,MAAM;MACZE,OAAO,EAAE,IAAI;MACbuB,SAAS,EAAEC,GAAG,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,CAAC,CAACC,QAAQ,CAACD,GAAG;IAC1F,CAAC;IACDE,GAAG,EAAE;MACH9B,IAAI,EAAEE,MAAM;MACZE,OAAO,EAAE;IACX;EACF,CAAC;EAED2B,MAAMA,CAACC,CAAC,EAAE;IACRlC,KAAK;IACLmC,IAAI;IACJC,QAAQ;IACRC;EACF,CAAC,EAAE;IACD;IACA,IAAIC,QAAQ,GAAG,EAAE;IAEjB,KAAK,MAAMtB,IAAI,IAAIhB,KAAK,EAAE;MACxBsC,QAAQ,IAAIlC,MAAM,CAACJ,KAAK,CAACgB,IAAI,CAAC,CAAC;IACjC;IAEA,IAAIuB,SAAS,GAAGjB,KAAK,CAACkB,GAAG,CAACF,QAAQ,CAAC;IAEnC,IAAI,CAACC,SAAS,EAAE;MACdA,SAAS,GAAG,EAAE,CAAC,CAAC;;MAEhB,IAAIrC,IAAI;MAER,KAAKA,IAAI,IAAIO,OAAO,EAAE;QACpBA,OAAO,CAACP,IAAI,CAAC,CAACuC,OAAO,CAACzB,IAAI,IAAI;UAC5B,MAAM0B,KAAK,GAAG1C,KAAK,CAACgB,IAAI,CAAC;UACzB,MAAMC,SAAS,GAAGF,eAAe,CAACb,IAAI,EAAEc,IAAI,EAAE0B,KAAK,CAAC;UACpD,IAAIzB,SAAS,EAAEsB,SAAS,CAACI,IAAI,CAAC1B,SAAS,CAAC;QAC1C,CAAC,CAAC;MACJ;MAEA,MAAM2B,aAAa,GAAGL,SAAS,CAACM,IAAI,CAAC5B,SAAS,IAAIA,SAAS,CAAC6B,UAAU,CAAC,MAAM,CAAC,CAAC;MAC/EP,SAAS,CAACI,IAAI,CAAC;QACb;QACAjC,GAAG,EAAE,CAACkC,aAAa,IAAI,CAAC5C,KAAK,CAAC2B,IAAI;QAClC,CAAE,OAAM3B,KAAK,CAAC2B,IAAK,EAAC,GAAG3B,KAAK,CAAC2B,IAAI;QACjC,CAAE,UAAS3B,KAAK,CAACa,MAAO,EAAC,GAAGb,KAAK,CAACa,MAAM;QACxC,CAAE,SAAQb,KAAK,CAACc,KAAM,EAAC,GAAGd,KAAK,CAACc,KAAK;QACrC,CAAE,cAAad,KAAK,CAAC4B,SAAU,EAAC,GAAG5B,KAAK,CAAC4B;MAC3C,CAAC,CAAC;MACFN,KAAK,CAACyB,GAAG,CAACT,QAAQ,EAAEC,SAAS,CAAC;IAChC;IAEA,OAAOL,CAAC,CAAClC,KAAK,CAACgC,GAAG,EAAErC,SAAS,CAACwC,IAAI,EAAE;MAClCa,KAAK,EAAET;IACT,CAAC,CAAC,EAAEH,QAAQ,CAAC;EACf;AAEF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}